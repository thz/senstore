name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: go build all
      run: |
        go build ./...

  test-matrix:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: go build matrix
      run: |
        env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=1 \
          go build -o senstore-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/senstore

  release:
    needs: test-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

  release-assets:
    needs: release
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      - name: prepare version string
        run: |
          echo VERSION_TAG=${GITHUB_REF#$"refs/tags/v"} >> $GITHUB_ENV
      - name: checkout
        uses: actions/checkout@v4

      - name: Build
        id: build_release
        run: |
          env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
            go build -o senstore-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/senstore

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_url }}
          asset_path: ./senstore-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: senstore-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream

  release-containers:
    needs: release
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: prepare version strings
        env:
          DOCKERHUB_ORG: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo DOCKERHUB_REPOSITORY=${DOCKERHUB_ORG}/${GITHUB_REPOSITORY#*/} >> $GITHUB_ENV
          echo VERSION_TAG=${GITHUB_REF#$"refs/tags/v"} >> $GITHUB_ENV

      - name: Print Version
        run: |
          echo "Version: $VERSION_TAG"
          echo "Dockerhub Repository: $DOCKERHUB_REPOSITORY"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout
        uses: actions/checkout@v4

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{env.DOCKERHUB_REPOSITORY}}:${{env.VERSION_TAG}}
            ${{env.DOCKERHUB_REPOSITORY}}:latest
            ghcr.io/${{ github.repository }}:${{env.VERSION_TAG}}
            ghcr.io/${{ github.repository }}:latest
          build-args: |
            ${{steps.version_step.outputs.version}}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max


